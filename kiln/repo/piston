#!/usr/bin/env bash

EXECUTION_PATH="$PWD"
kiln_PATH="$(dirname "$(realpath "$0")")"

cd "$kiln_PATH"
kiln_ENV=$(cat .kiln_env 2> /dev/null || echo dev)
echo "kiln path: $kiln_PATH"
echo "exec path: $EXECUTION_PATH"
docker_compose(){
    if [ -f "docker-compose.$kiln_ENV.yaml" ]; then
        docker-compose -f "docker-compose.$kiln_ENV.yaml" "$@"
    else
        docker-compose "$@"
    fi
}

case $1 in
    help)
        echo "=== kiln Management ==="
        echo "Current Environment: $kiln_ENV"
        echo
        echo "Commands:"
        echo " select <environment>           Select the environment"
        echo " docker_compose <args...>       Interact directly with the docker-compose for the selected environment"
        echo " logs                           Show docker-compose logs"
        echo
        echo " start                          Starts kiln"
        echo " stop                           Stops kiln"
        echo " restart                        Restarts kiln"
        echo " bash                           Opens a bash shell for the kiln_api container"
        echo
        echo " update                         Fetches and applies latest updates"
        echo
        echo " <args..>                       Passthrough to kiln cli tool"
        echo
        echo "Development Commands:"

        if [ "$kiln_ENV" == dev ]; then

        echo " clean-pkgs                              Clean any package build artifacts on disk"
        echo " clean-repo                              Remove all packages from local repo"
        echo " list-pkgs                               Lists all packages that can be built"
        echo " build-pkg <package> <version> [builder] Build a package [with desired builder image]"
        echo " rebuild                                 Build and restart the docker container"
        echo " lint                                    Lint the codebase using prettier"

        else

        echo " Switch to developement environment for more info"
        echo " > kiln select dev"

        fi
        ;;


    select) echo "$2" > .kiln_env ;;
    docker_compose) shift; docker_compose "$@";;
    logs) docker_compose logs -f ;;

    restart) docker_compose restart ;;
    start)
        docker_compose up -d
        ;;
    stop) docker_compose down ;;
    bash) docker_compose exec api /bin/bash ;;

    rebuild)
        docker_compose build && docker_compose up -d
        ;;

    update)
        git pull
        cd cli && npm i > /dev/null && cd -
        docker_compose pull
        docker_compose up -d
        ;;

    clean-pkgs) git clean -fqXd packages ;;
    clean-repo) git clean -fqXd repo ;;

    list-pkgs) find packages -maxdepth 2 | awk -F/ '$2 && $3{ print $2 "-" $3 }' | column ;;

    build-pkg)
        PKGSLUG="$2-$3"
        BUILDER="${4:-kiln-repo-builder}"
        echo "Building $PKGSLUG"
        echo "Ensuring latest builder image"
        docker build -f package-install.dockerfile . -t "$BUILDER"
        POSIX_PWD=$(echo "$PWD" | sed -e 's/\\/\//g' -e 's/://')
        docker run --rm -v "/$POSIX_PWD:/kiln" "$BUILDER" --no-server "$PKGSLUG"
        ;;

    lint)
        npm install
        npx prettier --ignore-unknown --write .
        ;;
    *)
        [ -d ./cli/node_modules ] || npm i > /dev/null
        cd "$EXECUTION_PATH"
        node "${kiln_PATH}/cli/index.js" "$@"
        ;;
esac
